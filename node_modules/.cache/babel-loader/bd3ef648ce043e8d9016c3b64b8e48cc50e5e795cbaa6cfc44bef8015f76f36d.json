{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\preet\\\\Desktop\\\\charity\\\\donation\\\\src\\\\components\\\\AddDonation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\"; // Import useLocation\nimport \"../styles/AddDonation.css\"; // Ensure this file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDonation = () => {\n  _s();\n  const [amount, setAmount] = useState(\"\"); // Amount in rupees\n  const [charityId, setCharityId] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation(); // Get state from the location object\n\n  useEffect(() => {\n    // Prefill charity ID if it was passed via navigation state\n    if (location.state && location.state.charityId) {\n      setCharityId(location.state.charityId);\n    }\n  }, [location.state]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      // Step 1: Create Razorpay order by sending amount to backend\n      const response = await axios.post(\"http://localhost:5000/api/create-order\", {\n        amount: amount * 100,\n        currency: \"INR\"\n      },\n      // Convert amount to paise and set currency to INR\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        id: orderId,\n        currency,\n        amount: orderAmount\n      } = response.data; // orderAmount is in paise\n\n      // Step 2: Configure Razorpay payment options\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: orderAmount,\n        // Amount is already in paise (received from backend)\n        currency: currency,\n        name: \"Charity Donation\",\n        description: \"Donate to charity\",\n        order_id: orderId,\n        handler: async response => {\n          try {\n            await axios.post(\"http://localhost:5000/api/donations\", {\n              amount: orderAmount / 100,\n              // Convert amount from paise to rupees for storing in the database\n              charityId,\n              razorpayPaymentId: response.razorpay_payment_id,\n              razorpayOrderId: response.razorpay_order_id,\n              razorpaySignature: response.razorpay_signature\n            }, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            alert(\"Donation successful!\");\n            navigate(\"/donations\"); // Redirect to donations list page\n          } catch (error) {\n            console.error(\"Error completing donation:\", error);\n            alert(\"Error completing donation. Please try again.\");\n          }\n        },\n        prefill: {\n          name: \"\",\n          // Optionally prefill with user's name and email\n          email: \"\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n\n      // Step 4: Open the Razorpay payment window\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n      alert(\"Error creating donation order. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-donation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Donation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d1\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount (INR)\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Charity ID\",\n          value: charityId,\n          onChange: e => setCharityId(e.target.value),\n          required: true,\n          disabled: !!charityId // Disable the field if charityId is prefilled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Donation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(AddDonation, \"wU6XADuoKww3SATefMTbfNh8TXU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddDonation;\nexport default AddDonation;\nvar _c;\n$RefreshReg$(_c, \"AddDonation\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","AddDonation","_s","amount","setAmount","charityId","setCharityId","navigate","location","state","handleSubmit","e","preventDefault","token","localStorage","getItem","response","post","currency","headers","Authorization","id","orderId","orderAmount","data","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","name","description","order_id","handler","razorpayPaymentId","razorpay_payment_id","razorpayOrderId","razorpay_order_id","razorpaySignature","razorpay_signature","alert","error","console","prefill","email","theme","color","paymentObject","window","Razorpay","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/preet/Desktop/charity/donation/src/components/AddDonation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\"; // Import useLocation\r\nimport \"../styles/AddDonation.css\"; // Ensure this file exists\r\n\r\nconst AddDonation = () => {\r\n  const [amount, setAmount] = useState(\"\"); // Amount in rupees\r\n  const [charityId, setCharityId] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation(); // Get state from the location object\r\n\r\n  useEffect(() => {\r\n    // Prefill charity ID if it was passed via navigation state\r\n    if (location.state && location.state.charityId) {\r\n      setCharityId(location.state.charityId);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Step 1: Create Razorpay order by sending amount to backend\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/create-order\",\r\n        { amount: amount * 100, currency: \"INR\" }, // Convert amount to paise and set currency to INR\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const { id: orderId, currency, amount: orderAmount } = response.data; // orderAmount is in paise\r\n\r\n      // Step 2: Configure Razorpay payment options\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: orderAmount, // Amount is already in paise (received from backend)\r\n        currency: currency,\r\n        name: \"Charity Donation\",\r\n        description: \"Donate to charity\",\r\n        order_id: orderId,\r\n        handler: async (response) => {\r\n          try {\r\n            await axios.post(\r\n              \"http://localhost:5000/api/donations\",\r\n              {\r\n                amount: orderAmount / 100, // Convert amount from paise to rupees for storing in the database\r\n                charityId,\r\n                razorpayPaymentId: response.razorpay_payment_id,\r\n                razorpayOrderId: response.razorpay_order_id,\r\n                razorpaySignature: response.razorpay_signature,\r\n              },\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                },\r\n              }\r\n            );\r\n\r\n            alert(\"Donation successful!\");\r\n            navigate(\"/donations\"); // Redirect to donations list page\r\n          } catch (error) {\r\n            console.error(\"Error completing donation:\", error);\r\n            alert(\"Error completing donation. Please try again.\");\r\n          }\r\n        },\r\n        prefill: {\r\n          name: \"\", // Optionally prefill with user's name and email\r\n          email: \"\",\r\n        },\r\n        theme: {\r\n          color: \"#3399cc\",\r\n        },\r\n      };\r\n\r\n      // Step 4: Open the Razorpay payment window\r\n      const paymentObject = new window.Razorpay(options);\r\n      paymentObject.open();\r\n    } catch (error) {\r\n      console.error(\"Error creating order:\", error);\r\n      alert(\"Error creating donation order. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-donation\">\r\n      <h1>Add Donation</h1>\r\n      <div className=\"d1\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Amount (INR)\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Charity ID\"\r\n            value={charityId}\r\n            onChange={(e) => setCharityId(e.target.value)}\r\n            required\r\n            disabled={!!charityId} // Disable the field if charityId is prefilled\r\n          />\r\n          <button type=\"submit\">Add Donation</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDonation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const token = localStorage.getItem('token'); // Retrieve token from localStorage\n    if (!token) {\n      throw new Error('No authentication token found. Please log in.');\n    }\n\n    // Post the charity data to the server\n    const response = await axios.post('http://localhost:5000/api/charities/register', {\n      name,\n      email,\n      password,\n      mission,\n      goals,\n      projects\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}` // Include the token in the request headers\n      }\n    });\n\n    // Extract the charity id from the response data\n    const {\n      id\n    } = response.data;\n    alert('Charity registered successfully!');\n    navigate(`/charity/${id}`); // Navigate to charity profile using the returned id\n  } catch (error) {\n    console.error('Error registering charity', error);\n    alert('Error registering charity. Please try again.');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","token","localStorage","getItem","Error","response","axios","post","name","email","password","mission","goals","projects","headers","Authorization","id","data","alert","navigate","error","console"],"sources":["C:/Users/preet/Desktop/charity/donation/src/components/CharityRegistration.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token'); // Retrieve token from localStorage\r\n      if (!token) {\r\n        throw new Error('No authentication token found. Please log in.');\r\n      }\r\n  \r\n      // Post the charity data to the server\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/charities/register',\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          mission,\r\n          goals,\r\n          projects,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Include the token in the request headers\r\n          },\r\n        }\r\n      );\r\n  \r\n      // Extract the charity id from the response data\r\n      const { id } = response.data;\r\n  \r\n      alert('Charity registered successfully!');\r\n      navigate(`/charity/${id}`); // Navigate to charity profile using the returned id\r\n    } catch (error) {\r\n      console.error('Error registering charity', error);\r\n      alert('Error registering charity. Please try again.');\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIG,KAAK,CAAC,+CAA+C,CAAC;IAClE;;IAEA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAC/B,8CAA8C,EAC9C;MACEC,IAAI;MACJC,KAAK;MACLC,QAAQ;MACRC,OAAO;MACPC,KAAK;MACLC;IACF,CAAC,EACD;MACEC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUd,KAAK,EAAE,CAAE;MACpC;IACF,CACF,CAAC;;IAED;IACA,MAAM;MAAEe;IAAG,CAAC,GAAGX,QAAQ,CAACY,IAAI;IAE5BC,KAAK,CAAC,kCAAkC,CAAC;IACzCC,QAAQ,CAAC,YAAYH,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjDF,KAAK,CAAC,8CAA8C,CAAC;EACvD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\preet\\\\Desktop\\\\charity\\\\donation\\\\src\\\\components\\\\DonationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/DonationList.css';\n\n// Utility function to format the amount in Indian Rupees (INR)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatAmountInRupees = amount => {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    minimumFractionDigits: 0\n  }).format(amount);\n};\nconst DonationList = () => {\n  _s();\n  const [donations, setDonations] = useState([]);\n  useEffect(() => {\n    const fetchDonations = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Get the token from localStorage\n        const response = await axios.get('http://localhost:5000/api/donations', {\n          headers: {\n            Authorization: `Bearer ${token}` // Include the token in the Authorization header\n          }\n        });\n        setDonations(response.data);\n      } catch (error) {\n        console.error('Error fetching donations', error);\n      }\n    };\n    fetchDonations();\n  }, []);\n\n  // Function to handle receipt download\n  const downloadReceipt = async donationId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/donations/download-receipt/${donationId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        responseType: 'blob' // Important: this tells axios to handle the response as a blob (binary)\n      });\n\n      // Create a URL for the blob and force download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `receipt-${donationId}.pdf`); // Set the download attribute with a file name\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link); // Cleanup\n    } catch (error) {\n      console.error('Error downloading receipt', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donation-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Donations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: donations.map(donation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", formatAmountInRupees(donation.amount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", donation.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Charity ID: \", donation.charityId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(donation.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-receipt-button\",\n          onClick: () => downloadReceipt(donation.id),\n          children: \"Download Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, donation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-donation-button\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-donation\",\n        className: \"add-donation-link\",\n        children: \"Add Donation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(DonationList, \"hgJsmc9xMm/+NYnzE9wyhQp/Bt8=\");\n_c = DonationList;\nexport default DonationList;\nvar _c;\n$RefreshReg$(_c, \"DonationList\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","formatAmountInRupees","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","DonationList","_s","donations","setDonations","fetchDonations","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","downloadReceipt","donationId","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","donation","userId","charityId","Date","date","toLocaleDateString","onClick","id","to","_c","$RefreshReg$"],"sources":["C:/Users/preet/Desktop/charity/donation/src/components/DonationList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/DonationList.css';\r\n\r\n// Utility function to format the amount in Indian Rupees (INR)\r\nconst formatAmountInRupees = (amount) => {\r\n  return new Intl.NumberFormat('en-IN', {\r\n    style: 'currency',\r\n    currency: 'INR',\r\n    minimumFractionDigits: 0,\r\n  }).format(amount);\r\n};\r\n\r\nconst DonationList = () => {\r\n  const [donations, setDonations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDonations = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Get the token from localStorage\r\n        const response = await axios.get('http://localhost:5000/api/donations', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Include the token in the Authorization header\r\n          },\r\n        });\r\n        setDonations(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching donations', error);\r\n      }\r\n    };\r\n\r\n    fetchDonations();\r\n  }, []);\r\n\r\n  // Function to handle receipt download\r\n  const downloadReceipt = async (donationId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5000/api/donations/download-receipt/${donationId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        responseType: 'blob', // Important: this tells axios to handle the response as a blob (binary)\r\n      });\r\n\r\n      // Create a URL for the blob and force download\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `receipt-${donationId}.pdf`); // Set the download attribute with a file name\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link); // Cleanup\r\n    } catch (error) {\r\n      console.error('Error downloading receipt', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"donation-list\">\r\n      <h1>All Donations</h1>\r\n      <ul>\r\n        {donations.map((donation) => (\r\n          <li key={donation.id}>\r\n            <p>Amount: {formatAmountInRupees(donation.amount)}</p>\r\n            <p>User ID: {donation.userId}</p>\r\n            <p>Charity ID: {donation.charityId}</p>\r\n            <p>Date: {new Date(donation.date).toLocaleDateString()}</p>\r\n            {/* Add a button to download the receipt */}\r\n            <button\r\n              className=\"download-receipt-button\"\r\n              onClick={() => downloadReceipt(donation.id)}\r\n            >\r\n              Download Receipt\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      \r\n      {/* Add Donation Button */}\r\n      <div className=\"add-donation-button\">\r\n        <Link to=\"/add-donation\" className=\"add-donation-link\">Add Donation</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}